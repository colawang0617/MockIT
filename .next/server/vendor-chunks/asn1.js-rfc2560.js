"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/asn1.js-rfc2560";
exports.ids = ["vendor-chunks/asn1.js-rfc2560"];
exports.modules = {

/***/ "(rsc)/./node_modules/asn1.js-rfc2560/index.js":
/*!***********************************************!*\
  !*** ./node_modules/asn1.js-rfc2560/index.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\nconst asn1 = __webpack_require__(/*! asn1.js */ \"(rsc)/./node_modules/asn1.js/lib/asn1.js\");\nconst rfc5280 = __webpack_require__(/*! asn1.js-rfc5280 */ \"(rsc)/./node_modules/asn1.js-rfc5280/index.js\");\n\nconst OCSPRequest = asn1.define('OCSPRequest', function() {\n  this.seq().obj(\n    this.key('tbsRequest').use(TBSRequest),\n    this.key('optionalSignature').optional().explicit(0).use(Signature)\n  );\n});\nexports.OCSPRequest = OCSPRequest;\n\nconst TBSRequest = asn1.define('TBSRequest', function() {\n  this.seq().obj(\n    this.key('version').def('v1').explicit(0).use(rfc5280.Version),\n    this.key('requestorName').optional().explicit(1).use(rfc5280.GeneralName),\n    this.key('requestList').seqof(Request),\n    this.key('requestExtensions').optional().explicit(2)\n      .seqof(rfc5280.Extension)\n  );\n});\nexports.TBSRequest = TBSRequest;\n\nconst Signature = asn1.define('Signature', function() {\n  this.seq().obj(\n    this.key('signatureAlgorithm').use(rfc5280.AlgorithmIdentifier),\n    this.key('signature').bitstr(),\n    this.key('certs').optional().explicit(0).seqof(rfc5280.Certificate)\n  );\n});\nexports.Signature = Signature;\n\nconst Request = asn1.define('Request', function() {\n  this.seq().obj(\n    this.key('reqCert').use(CertID),\n    this.key('singleRequestExtensions').optional().explicit(0).seqof(\n      rfc5280.Extension)\n  );\n});\nexports.Request = Request;\n\nconst OCSPResponse = asn1.define('OCSPResponse', function() {\n  this.seq().obj(\n    this.key('responseStatus').use(ResponseStatus),\n    this.key('responseBytes').optional().explicit(0).seq().obj(\n      this.key('responseType').objid({\n        '1 3 6 1 5 5 7 48 1 1': 'id-pkix-ocsp-basic'\n      }),\n      this.key('response').octstr()\n    )\n  );\n});\nexports.OCSPResponse = OCSPResponse;\n\nconst ResponseStatus = asn1.define('ResponseStatus', function() {\n  this.enum({\n    0: 'successful',\n    1: 'malformed_request',\n    2: 'internal_error',\n    3: 'try_later',\n    5: 'sig_required',\n    6: 'unauthorized'\n  });\n});\nexports.ResponseStatus = ResponseStatus;\n\nconst BasicOCSPResponse = asn1.define('BasicOCSPResponse', function() {\n  this.seq().obj(\n    this.key('tbsResponseData').use(ResponseData),\n    this.key('signatureAlgorithm').use(rfc5280.AlgorithmIdentifier),\n    this.key('signature').bitstr(),\n    this.key('certs').optional().explicit(0).seqof(rfc5280.Certificate)\n  );\n});\nexports.BasicOCSPResponse = BasicOCSPResponse;\n\nconst ResponseData = asn1.define('ResponseData', function() {\n  this.seq().obj(\n    this.key('version').def('v1').explicit(0).use(rfc5280.Version),\n    this.key('responderID').use(ResponderID),\n    this.key('producedAt').gentime(),\n    this.key('responses').seqof(SingleResponse),\n    this.key('responseExtensions').optional().explicit(1)\n      .seqof(rfc5280.Extension)\n  );\n});\nexports.ResponseData = ResponseData;\n\nconst ResponderID = asn1.define('ResponderId', function() {\n  this.choice({\n    byName: this.explicit(1).use(rfc5280.Name),\n    byKey: this.explicit(2).use(KeyHash)\n  });\n});\nexports.ResponderID = ResponderID;\n\nconst KeyHash = asn1.define('KeyHash', function() {\n  this.octstr();\n});\nexports.KeyHash = KeyHash;\n\nconst SingleResponse = asn1.define('SingleResponse', function() {\n  this.seq().obj(\n    this.key('certId').use(CertID),\n    this.key('certStatus').use(CertStatus),\n    this.key('thisUpdate').gentime(),\n    this.key('nextUpdate').optional().explicit(0).gentime(),\n    this.key('singleExtensions').optional().explicit(1).seqof(rfc5280.Extension)\n  );\n});\nexports.SingleResponse = SingleResponse;\n\nconst CertStatus = asn1.define('CertStatus', function() {\n  this.choice({\n    good: this.implicit(0).null_(),\n    revoked: this.implicit(1).use(RevokedInfo),\n    unknown: this.implicit(2).null_()\n  });\n});\nexports.CertStatus = CertStatus;\n\nconst RevokedInfo = asn1.define('RevokedInfo', function() {\n  this.seq().obj(\n    this.key('revocationTime').gentime(),\n    this.key('revocationReason').optional().explicit(0).use(rfc5280.ReasonCode)\n  );\n});\nexports.RevokedInfo = RevokedInfo;\n\nconst CertID = asn1.define('CertID', function() {\n  this.seq().obj(\n    this.key('hashAlgorithm').use(rfc5280.AlgorithmIdentifier),\n    this.key('issuerNameHash').octstr(),\n    this.key('issuerKeyHash').octstr(),\n    this.key('serialNumber').use(rfc5280.CertificateSerialNumber)\n  );\n});\nexports.CertID = CertID;\n\nconst Nonce = asn1.define('Nonce', function() {\n  this.octstr();\n});\nexports.Nonce = Nonce;\n\nexports[\"id-pkix-ocsp\"] = [ 1, 3, 6, 1, 5, 5, 7, 48, 1 ];\nexports[\"id-pkix-ocsp-nonce\"] = [ 1, 3, 6, 1, 5, 5, 7, 48, 1, 2 ];\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvYXNuMS5qcy1yZmMyNTYwL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLGFBQWEsbUJBQU8sQ0FBQyx5REFBUztBQUM5QixnQkFBZ0IsbUJBQU8sQ0FBQyxzRUFBaUI7O0FBRXpDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0QsbUJBQW1COztBQUVuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNELGtCQUFrQjs7QUFFbEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNELGlCQUFpQjs7QUFFakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNELGVBQWU7O0FBRWY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRCxvQkFBb0I7O0FBRXBCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0gsQ0FBQztBQUNELHNCQUFzQjs7QUFFdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0QseUJBQXlCOztBQUV6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Qsb0JBQW9COztBQUVwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSCxDQUFDO0FBQ0QsbUJBQW1COztBQUVuQjtBQUNBO0FBQ0EsQ0FBQztBQUNELGVBQWU7O0FBRWY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRCxzQkFBc0I7O0FBRXRCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0gsQ0FBQztBQUNELGtCQUFrQjs7QUFFbEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRCxtQkFBbUI7O0FBRW5CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNELGNBQWM7O0FBRWQ7QUFDQTtBQUNBLENBQUM7QUFDRCxhQUFhOztBQUViLHVCQUF1QjtBQUN2Qiw2QkFBNkIiLCJzb3VyY2VzIjpbIi9Vc2Vycy93YW5naGFvdGFpL0Rlc2t0b3AvZWx2ZW5sYWIvSFRWL25vZGVfbW9kdWxlcy9hc24xLmpzLXJmYzI1NjAvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCBhc24xID0gcmVxdWlyZSgnYXNuMS5qcycpO1xuY29uc3QgcmZjNTI4MCA9IHJlcXVpcmUoJ2FzbjEuanMtcmZjNTI4MCcpO1xuXG5jb25zdCBPQ1NQUmVxdWVzdCA9IGFzbjEuZGVmaW5lKCdPQ1NQUmVxdWVzdCcsIGZ1bmN0aW9uKCkge1xuICB0aGlzLnNlcSgpLm9iaihcbiAgICB0aGlzLmtleSgndGJzUmVxdWVzdCcpLnVzZShUQlNSZXF1ZXN0KSxcbiAgICB0aGlzLmtleSgnb3B0aW9uYWxTaWduYXR1cmUnKS5vcHRpb25hbCgpLmV4cGxpY2l0KDApLnVzZShTaWduYXR1cmUpXG4gICk7XG59KTtcbmV4cG9ydHMuT0NTUFJlcXVlc3QgPSBPQ1NQUmVxdWVzdDtcblxuY29uc3QgVEJTUmVxdWVzdCA9IGFzbjEuZGVmaW5lKCdUQlNSZXF1ZXN0JywgZnVuY3Rpb24oKSB7XG4gIHRoaXMuc2VxKCkub2JqKFxuICAgIHRoaXMua2V5KCd2ZXJzaW9uJykuZGVmKCd2MScpLmV4cGxpY2l0KDApLnVzZShyZmM1MjgwLlZlcnNpb24pLFxuICAgIHRoaXMua2V5KCdyZXF1ZXN0b3JOYW1lJykub3B0aW9uYWwoKS5leHBsaWNpdCgxKS51c2UocmZjNTI4MC5HZW5lcmFsTmFtZSksXG4gICAgdGhpcy5rZXkoJ3JlcXVlc3RMaXN0Jykuc2Vxb2YoUmVxdWVzdCksXG4gICAgdGhpcy5rZXkoJ3JlcXVlc3RFeHRlbnNpb25zJykub3B0aW9uYWwoKS5leHBsaWNpdCgyKVxuICAgICAgLnNlcW9mKHJmYzUyODAuRXh0ZW5zaW9uKVxuICApO1xufSk7XG5leHBvcnRzLlRCU1JlcXVlc3QgPSBUQlNSZXF1ZXN0O1xuXG5jb25zdCBTaWduYXR1cmUgPSBhc24xLmRlZmluZSgnU2lnbmF0dXJlJywgZnVuY3Rpb24oKSB7XG4gIHRoaXMuc2VxKCkub2JqKFxuICAgIHRoaXMua2V5KCdzaWduYXR1cmVBbGdvcml0aG0nKS51c2UocmZjNTI4MC5BbGdvcml0aG1JZGVudGlmaWVyKSxcbiAgICB0aGlzLmtleSgnc2lnbmF0dXJlJykuYml0c3RyKCksXG4gICAgdGhpcy5rZXkoJ2NlcnRzJykub3B0aW9uYWwoKS5leHBsaWNpdCgwKS5zZXFvZihyZmM1MjgwLkNlcnRpZmljYXRlKVxuICApO1xufSk7XG5leHBvcnRzLlNpZ25hdHVyZSA9IFNpZ25hdHVyZTtcblxuY29uc3QgUmVxdWVzdCA9IGFzbjEuZGVmaW5lKCdSZXF1ZXN0JywgZnVuY3Rpb24oKSB7XG4gIHRoaXMuc2VxKCkub2JqKFxuICAgIHRoaXMua2V5KCdyZXFDZXJ0JykudXNlKENlcnRJRCksXG4gICAgdGhpcy5rZXkoJ3NpbmdsZVJlcXVlc3RFeHRlbnNpb25zJykub3B0aW9uYWwoKS5leHBsaWNpdCgwKS5zZXFvZihcbiAgICAgIHJmYzUyODAuRXh0ZW5zaW9uKVxuICApO1xufSk7XG5leHBvcnRzLlJlcXVlc3QgPSBSZXF1ZXN0O1xuXG5jb25zdCBPQ1NQUmVzcG9uc2UgPSBhc24xLmRlZmluZSgnT0NTUFJlc3BvbnNlJywgZnVuY3Rpb24oKSB7XG4gIHRoaXMuc2VxKCkub2JqKFxuICAgIHRoaXMua2V5KCdyZXNwb25zZVN0YXR1cycpLnVzZShSZXNwb25zZVN0YXR1cyksXG4gICAgdGhpcy5rZXkoJ3Jlc3BvbnNlQnl0ZXMnKS5vcHRpb25hbCgpLmV4cGxpY2l0KDApLnNlcSgpLm9iaihcbiAgICAgIHRoaXMua2V5KCdyZXNwb25zZVR5cGUnKS5vYmppZCh7XG4gICAgICAgICcxIDMgNiAxIDUgNSA3IDQ4IDEgMSc6ICdpZC1wa2l4LW9jc3AtYmFzaWMnXG4gICAgICB9KSxcbiAgICAgIHRoaXMua2V5KCdyZXNwb25zZScpLm9jdHN0cigpXG4gICAgKVxuICApO1xufSk7XG5leHBvcnRzLk9DU1BSZXNwb25zZSA9IE9DU1BSZXNwb25zZTtcblxuY29uc3QgUmVzcG9uc2VTdGF0dXMgPSBhc24xLmRlZmluZSgnUmVzcG9uc2VTdGF0dXMnLCBmdW5jdGlvbigpIHtcbiAgdGhpcy5lbnVtKHtcbiAgICAwOiAnc3VjY2Vzc2Z1bCcsXG4gICAgMTogJ21hbGZvcm1lZF9yZXF1ZXN0JyxcbiAgICAyOiAnaW50ZXJuYWxfZXJyb3InLFxuICAgIDM6ICd0cnlfbGF0ZXInLFxuICAgIDU6ICdzaWdfcmVxdWlyZWQnLFxuICAgIDY6ICd1bmF1dGhvcml6ZWQnXG4gIH0pO1xufSk7XG5leHBvcnRzLlJlc3BvbnNlU3RhdHVzID0gUmVzcG9uc2VTdGF0dXM7XG5cbmNvbnN0IEJhc2ljT0NTUFJlc3BvbnNlID0gYXNuMS5kZWZpbmUoJ0Jhc2ljT0NTUFJlc3BvbnNlJywgZnVuY3Rpb24oKSB7XG4gIHRoaXMuc2VxKCkub2JqKFxuICAgIHRoaXMua2V5KCd0YnNSZXNwb25zZURhdGEnKS51c2UoUmVzcG9uc2VEYXRhKSxcbiAgICB0aGlzLmtleSgnc2lnbmF0dXJlQWxnb3JpdGhtJykudXNlKHJmYzUyODAuQWxnb3JpdGhtSWRlbnRpZmllciksXG4gICAgdGhpcy5rZXkoJ3NpZ25hdHVyZScpLmJpdHN0cigpLFxuICAgIHRoaXMua2V5KCdjZXJ0cycpLm9wdGlvbmFsKCkuZXhwbGljaXQoMCkuc2Vxb2YocmZjNTI4MC5DZXJ0aWZpY2F0ZSlcbiAgKTtcbn0pO1xuZXhwb3J0cy5CYXNpY09DU1BSZXNwb25zZSA9IEJhc2ljT0NTUFJlc3BvbnNlO1xuXG5jb25zdCBSZXNwb25zZURhdGEgPSBhc24xLmRlZmluZSgnUmVzcG9uc2VEYXRhJywgZnVuY3Rpb24oKSB7XG4gIHRoaXMuc2VxKCkub2JqKFxuICAgIHRoaXMua2V5KCd2ZXJzaW9uJykuZGVmKCd2MScpLmV4cGxpY2l0KDApLnVzZShyZmM1MjgwLlZlcnNpb24pLFxuICAgIHRoaXMua2V5KCdyZXNwb25kZXJJRCcpLnVzZShSZXNwb25kZXJJRCksXG4gICAgdGhpcy5rZXkoJ3Byb2R1Y2VkQXQnKS5nZW50aW1lKCksXG4gICAgdGhpcy5rZXkoJ3Jlc3BvbnNlcycpLnNlcW9mKFNpbmdsZVJlc3BvbnNlKSxcbiAgICB0aGlzLmtleSgncmVzcG9uc2VFeHRlbnNpb25zJykub3B0aW9uYWwoKS5leHBsaWNpdCgxKVxuICAgICAgLnNlcW9mKHJmYzUyODAuRXh0ZW5zaW9uKVxuICApO1xufSk7XG5leHBvcnRzLlJlc3BvbnNlRGF0YSA9IFJlc3BvbnNlRGF0YTtcblxuY29uc3QgUmVzcG9uZGVySUQgPSBhc24xLmRlZmluZSgnUmVzcG9uZGVySWQnLCBmdW5jdGlvbigpIHtcbiAgdGhpcy5jaG9pY2Uoe1xuICAgIGJ5TmFtZTogdGhpcy5leHBsaWNpdCgxKS51c2UocmZjNTI4MC5OYW1lKSxcbiAgICBieUtleTogdGhpcy5leHBsaWNpdCgyKS51c2UoS2V5SGFzaClcbiAgfSk7XG59KTtcbmV4cG9ydHMuUmVzcG9uZGVySUQgPSBSZXNwb25kZXJJRDtcblxuY29uc3QgS2V5SGFzaCA9IGFzbjEuZGVmaW5lKCdLZXlIYXNoJywgZnVuY3Rpb24oKSB7XG4gIHRoaXMub2N0c3RyKCk7XG59KTtcbmV4cG9ydHMuS2V5SGFzaCA9IEtleUhhc2g7XG5cbmNvbnN0IFNpbmdsZVJlc3BvbnNlID0gYXNuMS5kZWZpbmUoJ1NpbmdsZVJlc3BvbnNlJywgZnVuY3Rpb24oKSB7XG4gIHRoaXMuc2VxKCkub2JqKFxuICAgIHRoaXMua2V5KCdjZXJ0SWQnKS51c2UoQ2VydElEKSxcbiAgICB0aGlzLmtleSgnY2VydFN0YXR1cycpLnVzZShDZXJ0U3RhdHVzKSxcbiAgICB0aGlzLmtleSgndGhpc1VwZGF0ZScpLmdlbnRpbWUoKSxcbiAgICB0aGlzLmtleSgnbmV4dFVwZGF0ZScpLm9wdGlvbmFsKCkuZXhwbGljaXQoMCkuZ2VudGltZSgpLFxuICAgIHRoaXMua2V5KCdzaW5nbGVFeHRlbnNpb25zJykub3B0aW9uYWwoKS5leHBsaWNpdCgxKS5zZXFvZihyZmM1MjgwLkV4dGVuc2lvbilcbiAgKTtcbn0pO1xuZXhwb3J0cy5TaW5nbGVSZXNwb25zZSA9IFNpbmdsZVJlc3BvbnNlO1xuXG5jb25zdCBDZXJ0U3RhdHVzID0gYXNuMS5kZWZpbmUoJ0NlcnRTdGF0dXMnLCBmdW5jdGlvbigpIHtcbiAgdGhpcy5jaG9pY2Uoe1xuICAgIGdvb2Q6IHRoaXMuaW1wbGljaXQoMCkubnVsbF8oKSxcbiAgICByZXZva2VkOiB0aGlzLmltcGxpY2l0KDEpLnVzZShSZXZva2VkSW5mbyksXG4gICAgdW5rbm93bjogdGhpcy5pbXBsaWNpdCgyKS5udWxsXygpXG4gIH0pO1xufSk7XG5leHBvcnRzLkNlcnRTdGF0dXMgPSBDZXJ0U3RhdHVzO1xuXG5jb25zdCBSZXZva2VkSW5mbyA9IGFzbjEuZGVmaW5lKCdSZXZva2VkSW5mbycsIGZ1bmN0aW9uKCkge1xuICB0aGlzLnNlcSgpLm9iaihcbiAgICB0aGlzLmtleSgncmV2b2NhdGlvblRpbWUnKS5nZW50aW1lKCksXG4gICAgdGhpcy5rZXkoJ3Jldm9jYXRpb25SZWFzb24nKS5vcHRpb25hbCgpLmV4cGxpY2l0KDApLnVzZShyZmM1MjgwLlJlYXNvbkNvZGUpXG4gICk7XG59KTtcbmV4cG9ydHMuUmV2b2tlZEluZm8gPSBSZXZva2VkSW5mbztcblxuY29uc3QgQ2VydElEID0gYXNuMS5kZWZpbmUoJ0NlcnRJRCcsIGZ1bmN0aW9uKCkge1xuICB0aGlzLnNlcSgpLm9iaihcbiAgICB0aGlzLmtleSgnaGFzaEFsZ29yaXRobScpLnVzZShyZmM1MjgwLkFsZ29yaXRobUlkZW50aWZpZXIpLFxuICAgIHRoaXMua2V5KCdpc3N1ZXJOYW1lSGFzaCcpLm9jdHN0cigpLFxuICAgIHRoaXMua2V5KCdpc3N1ZXJLZXlIYXNoJykub2N0c3RyKCksXG4gICAgdGhpcy5rZXkoJ3NlcmlhbE51bWJlcicpLnVzZShyZmM1MjgwLkNlcnRpZmljYXRlU2VyaWFsTnVtYmVyKVxuICApO1xufSk7XG5leHBvcnRzLkNlcnRJRCA9IENlcnRJRDtcblxuY29uc3QgTm9uY2UgPSBhc24xLmRlZmluZSgnTm9uY2UnLCBmdW5jdGlvbigpIHtcbiAgdGhpcy5vY3RzdHIoKTtcbn0pO1xuZXhwb3J0cy5Ob25jZSA9IE5vbmNlO1xuXG5leHBvcnRzWydpZC1wa2l4LW9jc3AnXSA9IFsgMSwgMywgNiwgMSwgNSwgNSwgNywgNDgsIDEgXTtcbmV4cG9ydHNbJ2lkLXBraXgtb2NzcC1ub25jZSddID0gWyAxLCAzLCA2LCAxLCA1LCA1LCA3LCA0OCwgMSwgMiBdO1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/asn1.js-rfc2560/index.js\n");

/***/ })

};
;